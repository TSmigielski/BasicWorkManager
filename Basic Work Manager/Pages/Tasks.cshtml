@page
@using System.Globalization
@using BasicWorkManager.Services
@model BasicWorkManager.Pages.TasksModel
@{
	ViewData["Title"] = "Tasks";
}

<div class="container bg-light p-4 rounded shadow-lg my-5">
    <h2 class="text-center">@Model.localizer.GetString("Title", Model)</h2>

	<div class="d-flex flex-row justify-content-start">
		<form method="post" asp-page-handler="DateChange">
			<button class="bg-transparent border-0 m-0 px-0 pt-1" type="submit"><i class="bi bi-caret-left-square"></i></button>
			<input type="hidden" name="_dateString" value='@HttpContext.Request.Query["date"]' />
			<input type="hidden" name="_days" value="-7" />
		</form>
		<h5 class="mx-1 my-auto text-center">@Model.localizer.GetString("Week", Model): @ISOWeek.GetWeekOfYear(DateStuff.ParseDateString(Model.DateString).ToDateTime(TimeOnly.MinValue))</h5>
		<form method="post" asp-page-handler="DateChange">
			<button class="bg-transparent border-0 m-0 px-0 pt-1" type="submit"><i class="bi bi-caret-right-square"></i></button>
			<input type="hidden" name="_dateString" value='@HttpContext.Request.Query["date"]' />
			<input type="hidden" name="_days" value="7" />
		</form>

		<h5 class="ms-auto my-auto text-center">@Model.MyUser.FirstName @Model.MyUser.LastName</h5>
	</div>

	<hr />
	
	<div class="d-flex flex-row justify-content-start">
		<form method="post" asp-page-handler="DateChange">
			<button class="bg-transparent border-0 m-0 px-0 pt-1" type="submit"><i class="bi bi-caret-left-square"></i></button>
			<input type="hidden" name="_dateString" value='@HttpContext.Request.Query["date"]' />
			<input type="hidden" name="_days" value="-1" />
		</form>
			<h5 class="mx-1 my-auto text-center">@DateStuff.GetDayOfWeekName(Model.DateString, Model)</h5>
			<h5 class="mx-1 my-auto text-center">-</h5>
			<h5 class="mx-1 my-auto text-center">@DateStuff.GetDateString(Model.DateString, true)</h5>
		<form method="post" asp-page-handler="DateChange">
			<button class="bg-transparent border-0 m-0 px-0 pt-1" type="submit"><i class="bi bi-caret-right-square"></i></button>
			<input type="hidden" name="_dateString" value='@HttpContext.Request.Query["date"]' />
			<input type="hidden" name="_days" value="1" />
		</form>

		@if (DateTime.Parse(Model.DateString).Date != DateTime.Now.Date)
		{
			<a class="btn btn-link btn-sm" asp-page="/Tasks" asp-route-date="@DateStuff.GetDateString()">@Model.localizer.GetString("Go2Today", Model)</a>
		}
	</div>

	<form method="post">
		<table class="table">
			<thead>
				<tr>
					<th scope="col">@Model.localizer.GetString("Address", Model)</th>
					@foreach(var task in Model.Company.Tasks)
					{
						if (task.Description != null)
						{
							<th scope="col">@task.Name <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="@task.Description"></i></th>
						}
						else
						{
							<th scope="col">@task.Name</th>
						}
					}
				</tr>
			</thead>
			<tbody>
				@foreach(var address in Model.Company.Addresses)
				{
					<tr>
						<th scope="row">@address.WriteAddress()</th>
						@foreach(var task in Model.Company.Tasks)
						{
							<td> @* todo - put the asp-for value into some class *@
								@if (Model.MyUser.TaskDataList.FirstOrDefault(d => d.Date == DateTime.Parse(Model.DateString) && d.Task == task.Name && d.Address.WriteFullAddress() == address.WriteFullAddress()) != null)
								{
									<input 
										asp-for='Data[$"{Model.DateString}/{address.WriteFullAddress()}/{task.Name}"]'
										value="@Model.MyUser.TaskDataList.FirstOrDefault(d => d.Date == DateTime.Parse(Model.DateString) && d.Task == task.Name && d.Address.WriteFullAddress() == address.WriteFullAddress()).Data"
										type="@task.ValueType" step=".5"
									/>
								}
								else
								{
									<input asp-for='Data[$"{Model.DateString}/{address.WriteFullAddress()}/{task.Name}"]' type="@task.ValueType" step=".5" />
								}
							</td>
						}
					</tr>
				}
			</tbody>
			<tfoot>
				<tr>
					<th scope="row">@Model.localizer.GetString("Total", Model)</th>
					@foreach(var task in Model.Company.Tasks)
					{
						switch (task.ValueType)
						{
							case BasicWorkManager.Models.ValueType.Number: <td>@Model.MyUser.SumData(task.Name, DateTime.Parse(Model.DateString))</td> break;
							case BasicWorkManager.Models.ValueType.Text: <td>-</td> break;
						}
					}
				</tr>
			</tfoot>
		</table>
		<button class="btn btn-primary d-block ms-auto" type="submit">@Model.localizer.GetString("Save", Model)</button>
	</form>
</div>