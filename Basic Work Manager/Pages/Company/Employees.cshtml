@page
@using System.Globalization
@using BasicWorkManager.Services
@model BasicWorkManager.Pages.Account.EmployeesModel
@{
	ViewData["Title"] = "Employees";
}

<div class="container bg-light p-4 rounded shadow-lg my-5">
    <h2 class="text-center mb-2">@Model.localizer.GetString("Title", Model)</h2>

	<div class="d-flex flex-row justify-content-start mb-2">
		<form method="post" asp-page-handler="ChangeWeek">
			<button class="bg-transparent border-0 m-0 px-0 pt-1" type="submit"><i class="bi bi-caret-left-square"></i></button>
			<input type="hidden" name="_week" value='@HttpContext.Request.Query["week"]' />
			<input type="hidden" name="_year" value='@HttpContext.Request.Query["year"]' />
			<input type="hidden" name="_weeksToAdd" value="-1" />
		</form>
			<h5 class="mx-1 my-auto text-center">@Model.localizer.GetString("Week", Model): @Model.Week</h5>
		<form method="post" asp-page-handler="ChangeWeek">
			<button class="bg-transparent border-0 m-0 px-0 pt-1" type="submit"><i class="bi bi-caret-right-square"></i></button>
			<input type="hidden" name="_week" value='@HttpContext.Request.Query["week"]' />
			<input type="hidden" name="_year" value='@HttpContext.Request.Query["year"]' />
			<input type="hidden" name="_weeksToAdd" value="1" />
		</form>

		@if (Model.Year != DateTime.Now.Year || Model.Week != ISOWeek.GetWeekOfYear(DateTime.Now))
		{
			<a class="btn btn-link btn-sm" asp-page="/Company/Employees" asp-route-week="@ISOWeek.GetWeekOfYear(DateTime.Now)" asp-route-year="@DateTime.Now.Year">Go to today's week</a>
		}

		<h5 class="ms-auto my-auto text-center">@Model.Year</h5>
	</div>

	<div class="accordion">
		@foreach(var user in Model.Company.Users)
		{
			<div class="accordion-item">
				<div class="accordion-header">
					<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@Model.GetUniqueUserID(user)">
						<h5>@user.FirstName @user.LastName</h5>
					</button>
				</div>
				<div id="@Model.GetUniqueUserID(user)" class="accordion-collapse collapse">
					<div class="accordion-body">
						<table class="table table-striped table-hover">
							<thead>
								<tr>
									<th scope="col">@Model.localizer.GetString("Date", Model)</th>
									<th scope="col">@Model.localizer.GetString("Address", Model)</th>
									@foreach(var task in Model.Company.Tasks)
									{
										if (task.Description != null)
										{
											<th scope="col">@task.Name <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="@task.Description"></i></th>
										}
										else
										{
											<th scope="col">@task.Name</th>
										}
									}
								</tr>
							</thead>
							<tbody>
								@for (DateTime date = DateTimeExtensions.FirstDayOfWeek((int)Model.Year, (int)Model.Week); date <= DateTimeExtensions.LastDayOfWeek((int)Model.Year, (int)Model.Week); date = date.AddDays(1))
								{
									foreach (var address in (await Model.GetUsedAddresses(user, date)))
									{
										if (user.TaskDataList.Any(d => BasicWorkManager.Models.Address.CompareAddresses(d.Address, address) && d.Date == date))
										{
											<tr>
												@if (!Model.DatesInWeek.Contains(date))
												{
													Model.DatesInWeek.Add(date);
													<th scope="row">@($"{DateStuff.GetDayOfWeekName(date, Model)} - {DateStuff.GetDateString(date, true)}")</th>
												}
												else
												{
													<th></th>
												}
												<th scope="row">@address.WriteAddress()</th>
												@foreach (var task in Model.Company.Tasks)
												{
													<td>
														@if (user.TaskDataList.FirstOrDefault(d => d.Task == task.Name && BasicWorkManager.Models.Address.CompareAddresses(d.Address, address) && d.Date == date) != null)
														{
															<text>@user.TaskDataList.FirstOrDefault(d => d.Task == task.Name && BasicWorkManager.Models.Address.CompareAddresses(d.Address, address) && d.Date == date).Data</text>
														}
													</td>
												}
											</tr>
										}
									}
									<tr style="border-color: #212529">
										<th scope="row">@(!Model.DatesInWeek.Contains(date) ? $"{DateStuff.GetDayOfWeekName(date, Model)} - {DateStuff.GetDateString(date, true)}" : "")</th>
										<th class="text-end">@Model.localizer.GetString("SubTotal", Model):</th>
										@foreach (var task in Model.Company.Tasks)
										{
											if (task.ValueType == Models.ValueType.Number)
											{
												<td>
													<b>@user.SumData(task.Name, date)</b>
												</td>
											}
											else
											{
												<td></td>
											}
										}
									</tr>
								}
							</tbody>
							<tfoot>
								<tr>
									<th scope="row"></th>
									<th class="text-end">@Model.localizer.GetString("Total", Model):</th>
									@foreach(var task in Model.Company.Tasks)
									{
										if (task.ValueType == Models.ValueType.Number)
										{
											for(DateTime date = DateTimeExtensions.FirstDayOfWeek((int)Model.Year, (int)Model.Week); date <= DateTimeExtensions.LastDayOfWeek((int)Model.Year, (int)Model.Week); date = date.AddDays(1))
											{
												Model.Total += user.SumData(task.Name, date);
											}
											<td>
												<b>@Model.Total</b>
											</td>
											Model.Total = 0f;
										}
										else
										{
											<td></td>
										}
									}
								</tr>
							</tfoot>
						</table>
					</div>
				</div>
			</div>

			Model.DatesInWeek = new();
		}
	</div>
</div>